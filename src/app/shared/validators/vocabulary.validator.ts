import {AbstractControl} from '@angular/forms';
import * as util from 'util';
import {CommaSeparatedPatternValidator, PatternValidator} from './generic.validator';

const placeCodes = regexFromArray(['Place-WW', 'Place-EU', 'Place-AD', 'Place-AE', 'Place-AF', 'Place-AG', 'Place-AI', 'Place-AL', 'Place-AM', 'Place-AO', 'Place-AQ', 'Place-AR', 'Place-AS', 'Place-AT', 'Place-AU', 'Place-AW', 'Place-AX', 'Place-AZ', 'Place-BA', 'Place-BB', 'Place-BD', 'Place-BE', 'Place-BF', 'Place-BG', 'Place-BH', 'Place-BI', 'Place-BJ', 'Place-BL', 'Place-BM', 'Place-BN', 'Place-BO', 'Place-BQ', 'Place-BR', 'Place-BS', 'Place-BT', 'Place-BV', 'Place-BW', 'Place-BY', 'Place-BZ', 'Place-CA', 'Place-CC', 'Place-CD', 'Place-CF', 'Place-CG', 'Place-CH', 'Place-CI', 'Place-CK', 'Place-CL', 'Place-CM', 'Place-CN', 'Place-CO', 'Place-CR', 'Place-CU', 'Place-CV', 'Place-CW', 'Place-CX', 'Place-CY', 'Place-CZ', 'Place-DE', 'Place-DJ', 'Place-DK', 'Place-DM', 'Place-DO', 'Place-DZ', 'Place-EC', 'Place-EE', 'Place-EG', 'Place-EH', 'Place-ER', 'Place-ES', 'Place-ET', 'Place-FI', 'Place-FJ', 'Place-FK', 'Place-FM', 'Place-FO', 'Place-FR', 'Place-GA', 'Place-GB', 'Place-GD', 'Place-GE', 'Place-GF', 'Place-GG', 'Place-GH', 'Place-GI', 'Place-GL', 'Place-GM', 'Place-GN', 'Place-GP', 'Place-GQ', 'Place-GR', 'Place-GS', 'Place-GT', 'Place-GU', 'Place-GW', 'Place-GY', 'Place-HK', 'Place-HM', 'Place-HN', 'Place-HR', 'Place-HT', 'Place-HU', 'Place-ID', 'Place-IE', 'Place-IL', 'Place-IM', 'Place-IN', 'Place-IO', 'Place-IQ', 'Place-IR', 'Place-IS', 'Place-IT', 'Place-JE', 'Place-JM', 'Place-JO', 'Place-JP', 'Place-KE', 'Place-KG', 'Place-KH', 'Place-KI', 'Place-KM', 'Place-KN', 'Place-KP', 'Place-KR', 'Place-KW', 'Place-KY', 'Place-KZ', 'Place-LA', 'Place-LB', 'Place-LC', 'Place-LI', 'Place-LK', 'Place-LR', 'Place-LS', 'Place-LT', 'Place-LU', 'Place-LV', 'Place-LY', 'Place-MA', 'Place-MC', 'Place-MD', 'Place-ME', 'Place-MF', 'Place-MG', 'Place-MH', 'Place-MK', 'Place-ML', 'Place-MM', 'Place-MN', 'Place-MO', 'Place-MP', 'Place-MQ', 'Place-MR', 'Place-MS', 'Place-MT', 'Place-MU', 'Place-MV', 'Place-MW', 'Place-MX', 'Place-MY', 'Place-MZ', 'Place-NA', 'Place-NC', 'Place-NE', 'Place-NF', 'Place-NG', 'Place-NI', 'Place-NL', 'Place-NO', 'Place-NP', 'Place-NR', 'Place-NU', 'Place-NZ', 'Place-OM', 'Place-PA', 'Place-PE', 'Place-PF', 'Place-PG', 'Place-PH', 'Place-PK', 'Place-PL', 'Place-PM', 'Place-PN', 'Place-PR', 'Place-PS', 'Place-PT', 'Place-PW', 'Place-PY', 'Place-QA', 'Place-RE', 'Place-RO', 'Place-RS', 'Place-RU', 'Place-RW', 'Place-SA', 'Place-SB', 'Place-SC', 'Place-SD', 'Place-SE', 'Place-SG', 'Place-SH', 'Place-SI', 'Place-SJ', 'Place-SK', 'Place-SL', 'Place-SM', 'Place-SN', 'Place-SO', 'Place-SR', 'Place-SS', 'Place-ST', 'Place-SV', 'Place-SX', 'Place-SY', 'Place-SZ', 'Place-TC', 'Place-TD', 'Place-TF', 'Place-TG', 'Place-TH', 'Place-TJ', 'Place-TK', 'Place-TL', 'Place-TM', 'Place-TN', 'Place-TO', 'Place-TR', 'Place-TT', 'Place-TV', 'Place-TW', 'Place-TZ', 'Place-UA', 'Place-UG', 'Place-UM', 'Place-US', 'Place-UY', 'Place-UZ', 'Place-VA', 'Place-VC', 'Place-VE', 'Place-VG', 'Place-VI', 'Place-VN', 'Place-VU', 'Place-WF', 'Place-WS', 'Place-YE', 'Place-YT', 'Place-ZA', 'Place-ZM', 'Place-ZW']);
const languageCodes = regexFromArray(['Language-aa', 'Language-ab', 'Language-ae', 'Language-af', 'Language-ak', 'Language-am', 'Language-an', 'Language-ar', 'Language-as', 'Language-av', 'Language-ay', 'Language-az', 'Language-ba', 'Language-be', 'Language-bg', 'Language-bh', 'Language-bi', 'Language-bm', 'Language-bn', 'Language-bo', 'Language-br', 'Language-bs', 'Language-ca', 'Language-ce', 'Language-ch', 'Language-co', 'Language-cr', 'Language-cs', 'Language-cu', 'Language-cv', 'Language-cy', 'Language-da', 'Language-de', 'Language-dv', 'Language-dz', 'Language-ee', 'Language-el', 'Language-en', 'Language-eo', 'Language-es', 'Language-et', 'Language-eu', 'Language-fa', 'Language-ff', 'Language-fi', 'Language-fj', 'Language-fo', 'Language-fr', 'Language-fy', 'Language-ga', 'Language-gd', 'Language-gl', 'Language-gn', 'Language-gu', 'Language-gv', 'Language-ha', 'Language-he', 'Language-hi', 'Language-ho', 'Language-hr', 'Language-ht', 'Language-hu', 'Language-hy', 'Language-hz', 'Language-ia', 'Language-id', 'Language-ie', 'Language-ig', 'Language-ii', 'Language-ik', 'Language-io', 'Language-is', 'Language-it', 'Language-iu', 'Language-ja', 'Language-jv', 'Language-ka', 'Language-kg', 'Language-ki', 'Language-kj', 'Language-kk', 'Language-kl', 'Language-km', 'Language-kn', 'Language-ko', 'Language-kr', 'Language-ks', 'Language-ku', 'Language-kv', 'Language-kw', 'Language-ky', 'Language-la', 'Language-lb', 'Language-lg', 'Language-li', 'Language-ln', 'Language-lo', 'Language-lt', 'Language-lu', 'Language-lv', 'Language-mg', 'Language-mh', 'Language-mi', 'Language-mk', 'Language-ml', 'Language-mn', 'Language-mr', 'Language-ms', 'Language-mt', 'Language-my', 'Language-na', 'Language-nb', 'Language-nd', 'Language-ne', 'Language-ng', 'Language-nl', 'Language-nn', 'Language-no', 'Language-nr', 'Language-nv', 'Language-ny', 'Language-oc', 'Language-oj', 'Language-om', 'Language-or', 'Language-os', 'Language-pa', 'Language-pi', 'Language-pl', 'Language-ps', 'Language-pt', 'Language-qu', 'Language-rm', 'Language-rn', 'Language-ro', 'Language-ru', 'Language-rw', 'Language-sa', 'Language-sc', 'Language-sd', 'Language-se', 'Language-sg', 'Language-si', 'Language-sk', 'Language-sl', 'Language-sm', 'Language-sn', 'Language-so', 'Language-sq', 'Language-sr', 'Language-ss', 'Language-st', 'Language-su', 'Language-sv', 'Language-sw', 'Language-ta', 'Language-te', 'Language-tg', 'Language-th', 'Language-ti', 'Language-tk', 'Language-tl', 'Language-tn', 'Language-to', 'Language-tr', 'Language-ts', 'Language-tt', 'Language-tw', 'Language-ty', 'Language-ug', 'Language-uk', 'Language-ur', 'Language-uz', 'Language-ve', 'Language-vi', 'Language-vo', 'Language-wa', 'Language-wo', 'Language-xh', 'Language-yi', 'Language-yo', 'Language-za', 'Language-zh', 'Language-zu']);

export function TRLValidator(control: AbstractControl) {
  return PatternValidator(control, /^TRL-7|TRL-8|TRL-9$/);
}

export function LifeCycleStatusValidator(control: AbstractControl) {
  return PatternValidator(control, /^LifeCycleStatus-Alpha|LifeCycleStatus-Beta|LifeCycleStatus-Production$/);
}

export function PlaceValidator(control: AbstractControl) {
  return CommaSeparatedPatternValidator(control, placeCodes);
}

export function LanguageValidator(control: AbstractControl) {
  return CommaSeparatedPatternValidator(control, languageCodes);
}

function regexFromArray(array) {
  return new RegExp(util.format('\^(%s)\$', array.join('|')));
}
